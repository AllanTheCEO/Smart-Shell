<code>Cust First   Last     Street                City        ST
---- ------- -------- --------------------- ----------- --
0001 Richard Stollman 1 Outonthe Street     Boston      MA
0002 Eric    Roymond  2 Amendment Road      Bunker Hill PA
0003 Bruce   Porens   420 Middleville Drive Anytown     US</code></pre>
<pre><code>Item Title                                  Author        Price
---- -------------------------------------- ------------- -----
1001 Winning Friends and Influencing People Dale Carnegie 14.95
1002 The Communist Manifesto                Marx &amp; Engels 00.00
1003 Atlas Shrugged                         Ayn Rand      99.99</code></pre>
<pre><code>Cust Date_Time    Item Quan Total
---- ------------ ---- ---- ------
0002 202006150931 1003    1  99.99
0001 202006151108 1002    1   0.00
0003 202006151820 1001   10 149.50</code></pre>
<pre><code>me@linuxbox:~$ sudo apt install sqlite3</code></pre>
<h3 id="building-a-playground">Building a Playground</h3>
<p>Let’s build a playground and play with some real data. On the LinuxCommand.org site there is a archive we can download that will do the trick.</p>
<pre><code>me@linuxbox:~$ cd
me@linuxbox:~$ curl -c http://linuxcommand.org/adventure-sql.tgz
me@linuxbox:~$ tar xzf adventure-sql.tgz
me@linuxbox:~$ cd adventure-sql</code></pre>
<pre><code>me@linuxbox:~/adventure-sql$ ls</code></pre>
<p>All the files are human-readable text, so feel free to give them a look. The data sets in the archive are the <code>.tsv</code> files. These are tab-separated value files. The first one is the <code>package_descriptions.tsv</code> file. This contains two columns of data; a package name and a package description. The second file, named <code>package_files.txv</code>, has three columns: a package name, the name of a file installed by the package and the size of the file.</p>
<h3 id="starting-sqlite3">Starting sqlite3</h3>
<p>To launch SQLite, we simply issue the command <code>sqlite3</code> followed optionally by the name of a file to hold our database of tables. If we do not supply a file name, SQLite will create a temporary database in memory.</p>
<pre><code>me@linuxbox:~/advemture-sql$ sqlite3
SQLite version 3.22.0 2018-01-22 18:45:57
Enter &quot;.help&quot; for usage hints.
Connected to a transient in-memory database.
Use &quot;.open FILENAME&quot; to reopen on a persistent database.
sqlite&gt;</code></pre>
<pre><code>sqlite&gt; .help</code></pre>
<p>There are only a few of the dot commands that will be of interest to us and they deal mainly with how output is formatted. To exit <code>sqlite3</code>, we enter the dot command <code>.quit</code> at the prompt.</p>
<pre><code>sqlite&gt; .quit</code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ ./insert_Package_Descriptions.awk \
&lt; package_descriptions.tsv &gt; insert_Package_Descriptions.sql</code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ head insert_Package_Descriptions.sql
DROP TABLE IF EXISTS Package_Descriptions;
CREATE TABLE Package_Descriptions (
    package_name VARCHAR(60),
    description  VARCHAR(120)
);
BEGIN TRANSACTION;
INSERT INTO Package_Descriptions
     VALUES ( &#39;a2ps&#39;,
              &#39;GNU a2ps - &#39;&#39;Anything to PostScript&#39;&#39; converter and pretty-prin
ter&#39;);
INSERT INTO Package_Descriptions
     VALUES ( &#39;accountsservice&#39;,
              &#39;query and manipulate user account information&#39;);</code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ tail insert_Package_Descriptions.sql
     VALUES ( &#39;zlib1g:amd64&#39;,
              &#39;compression library - runtime&#39;);
INSERT INTO Package_Descriptions
     VALUES ( &#39;zlib1g:i386&#39;,
              &#39;compression library - runtime&#39;);
INSERT INTO Package_Descriptions
     VALUES ( &#39;zlib1g-dev:amd64&#39;,
              &#39;compression library - development&#39;);
INSERT INTO Package_Descriptions
     VALUES ( &#39;zsh&#39;,
              &#39;shell with lots of features&#39;);
INSERT INTO Package_Descriptions
     VALUES ( &#39;zsh-common&#39;,
              &#39;architecture independent files for Zsh&#39;);
COMMIT;</code></pre>
<pre><code>-- Single line comments are preceeded by 2 dashes

/* And multi-line comments are done in the
   style of the C programming language */</code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ sqlite3 adv-sql.sqlite \
&lt; insert_Package_Descriptions.sql</code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ sqlite3 adv-sql.sqlite
SQLite version 3.22.0 2018-01-22 18:45:57
Enter &quot;.help&quot; for usage hints.
sqlite&gt; </code></pre>
<pre><code>sqlite&gt; .tables
Package_Descriptions
sqlite&gt; .schema Package_Descriptions
CREATE TABLE Package_Descriptions (
    package_name VARCHAR(60),
    description  VARCHAR(120)
); </code></pre>
<pre><code>sqlite&gt; SELECT * FROM Package_Descriptions;
a2ps|GNU a2ps - &#39;Anything to PostScript&#39; converter and pretty-printer
accountsservice|query and manipulate user account information
acl|Access control list utilities
acpi-support|scripts for handling many ACPI events
acpid|Advanced Configuration and Power Interface event daemon
adduser|add and remove users and groups
adium-theme-ubuntu|Adium message style for Ubuntu
adwaita-icon-theme|default icon theme of GNOME (small subset)
aisleriot|GNOME solitaire card game collection
alsa-base|ALSA driver configuration files
.
.
.</code></pre>
<pre><code>sqlite&gt; SELECT package_name, description FROM Package_Descriptions;</code></pre>
<p>And achieve the same result.</p>
<h3 id="controlling-the-output">Controlling the Output</h3>
<p>As we can see from the output above, the default format is fine for further processing by tools such as <code>awk</code>, but it leaves a lot to be desired when it comes to being read by humans. We can adjust the output format with some dot commands. We’ll also add the <code>LIMIT</code> clause to the end of our query to output just 10 rows.</p>
<pre><code>sqlite&gt; .headers on
sqlite&gt; .mode column
sqlite&gt; SELECT * FROM Package_Descriptions LIMIT 10;
package_name  description                                                     
------------  ----------------------------------------------------------------
a2ps          GNU a2ps - &#39;Anything to PostScript&#39; converter and pretty-printer
accountsserv  query and manipulate user account information                   
acl           Access control list utilities                                   
acpi-support  scripts for handling many ACPI events                           
acpid         Advanced Configuration and Power Interface event daemon         
adduser       add and remove users and groups                                 
adium-theme-  Adium message style for Ubuntu                                  
adwaita-icon  default icon theme of GNOME (small subset)                      
aisleriot     GNOME solitaire card game collection                            
alsa-base     ALSA driver configuration files</code></pre>
<pre><code>sqlite&gt; .mode column 
sqlite&gt; .width 20 60 
sqlite&gt; SELECT * FROM Package_Descriptions LIMIT 10;
package_name          description                                                 
--------------------  ---------------------------------------------------------
a2ps                  GNU a2ps - &#39;Anything to PostScript&#39; converter and pretty-
accountsservice       query and manipulate user account information               
acl                   Access control list utilities                               
acpi-support          scripts for handling many ACPI events                       
acpid                 Advanced Configuration and Power Interface event daemon     
adduser               add and remove users and groups                             
adium-theme-ubuntu    Adium message style for Ubuntu                              
adwaita-icon-theme    default icon theme of GNOME (small subset)                  
aisleriot             GNOME solitaire card game collection                        
alsa-base             ALSA driver configuration files                             </code></pre>
<pre><code>sqlite&gt; SELECT COUNT(package_name) FROM Package_Descriptions;
count(package_name) 
--------------------
1972                </code></pre>
<pre><code>sqlite&gt; SELECT * FROM Package_Descriptions WHERE package_name = &#39;bash&#39;;
package_name          description                                                 
--------------------  --------------------------------------------------------
bash                  GNU Bourne Again SHell                                  </code></pre>
<pre><code>sqlite&gt; SELECT * FROM Package_Descriptions WHERE description LIKE &#39;%bash%&#39;;
package_name          description
--------------------  --------------------------------------------------------
bash-completion       programmable completion for the bash shell
command-not-found     Suggest installation of packages in interactive bash ses</code></pre>
<pre><code>sqlite&gt; SELECT * FROM Package_Descriptions ORDER BY description LIMIT 10;
package_name          description
--------------------  -------------------------------------------------------
network-manager-conf
fonts-noto-cjk        &quot;No Tofu&quot; font families with large Unicode coverage (CJ
fonts-noto-mono       &quot;No Tofu&quot; monospaced font family with large Unicode cov
udev                  /dev/ and hotplug management daemon
procps                /proc file system utilities
alsa-base             ALSA driver configuration files
libasound2-plugins:a  ALSA library additional plugins
libhyphen0:amd64      ALTLinux hyphenation library - shared library
apcupsd               APC UPS Power Management (daemon)
apcupsd-doc           APC UPS Power Management (documentation/examples)</code></pre>
<pre><code>sqlite&gt; SELECT * FROM Package_Descriptions ORDER BY description DESC LIMIT 10;
package_name  description                                       
------------  --------------------------------------------------
xsane-common  xsane architecture independent files              
libx264-152:  x264 video coding library                         
libevdev2:am  wrapper library for evdev devices                 
wireless-reg  wireless regulatory database                      
crda          wireless Central Regulatory Domain Agent          
libmutter-2-  window manager library from the Mutter window mana
libwayland-s  wayland compositor infrastructure - server library
libwayland-c  wayland compositor infrastructure - cursor library
libwayland-c  wayland compositor infrastructure - client library
libwayland-e  wayland compositor infrastructure - EGL library   </code></pre>
<pre><code>me@linuxbox:~/advemture-sql$ ./insert_package_files.awk \ 
                                &lt; package_files-deb.tsv \
                                | sqlite3 adv-sql.sqlite</code></pre>
<pre><code>sqlite&gt; .schema Package_Files
CREATE TABLE Package_Files (
    package_name VARCHAR(60),
    file         VARCHAR(120),
    size_bytes   INTEGER
);</code></pre>
<pre><code>sqlite&gt; .headers on
sqlite&gt; .mode column
sqlite&gt; .width 15 50 -10
sqlite&gt; SELECT * FROM Package_Files WHERE package_name = &#39;bash&#39;;
package_name     file                                                size_bytes
---------------  -------------------------------------------------  ----------
bash             /bin/bash                                             1113504
bash             /etc/bash.bashrc                                         2319
bash             /etc/skel/.bash_logout                                    220
bash             /etc/skel/.bashrc                                        3771
bash             /etc/skel/.profile                                        807
bash             /usr/bin/bashbug                                         7115
bash             /usr/bin/clear_console                                  10312
bash             /usr/share/doc/bash/COMPAT.gz                            7853
bash             /usr/share/doc/bash/INTRO.gz                             2921
bash             /usr/share/doc/bash/NEWS.gz                             27983
bash             /usr/share/doc/bash/POSIX.gz                             3702
bash             /usr/share/doc/bash/RBASH                                1693
bash             /usr/share/doc/bash/README                               3839
bash             /usr/share/doc/bash/README.Debian.gz                     1919
bash             /usr/share/doc/bash/README.abs-guide                     1105
bash             /usr/share/doc/bash/README.commands.gz                   3021
bash             /usr/share/doc/bash/changelog.Debian.gz                  1357
bash             /usr/share/doc/bash/copyright                           10231
bash             /usr/share/doc/bash/inputrc.arrows                        727
bash             /usr/share/lintian/overrides/bash                         156
bash             /usr/share/man/man1/bash.1.gz                           86656
bash             /usr/share/man/man1/bashbug.1.gz                          804
bash             /usr/share/man/man1/clear_console.1.gz                   1194
bash             /usr/share/man/man1/rbash.1.gz                            154
bash             /usr/share/man/man7/bash-builtins.7.gz                    508
bash             /usr/share/menu/bash                                      194
bash             /bin/rbash                                                  4</code></pre>
<pre><code>sqlite&gt; .mode column
sqlite&gt; .header off
sqlite&gt; SELECT &#39;String 1&#39;, &#39;String 2&#39;;
string 1    string 2</code></pre>
<pre><code>sqlite&gt; .header on
sqlite&gt; SELECT 2 + 2;
2 + 2
--------------------
4
sqlite&gt; SELECT COUNT(file), AVG(size_bytes) FROM Package_Files;
count(file)  avg(size_bytes)
-----------  ----------------
153506       33370.3488658424</code></pre>
<pre><code>sqlite&gt; SELECT COUNT(file) AS Files,
   ...&gt; AVG(size_bytes) AS &#39;Average Size&#39;
   ...&gt; FROM Package_Files;
Files       Average Size    
----------  ----------------
153506      33370.3488658424</code></pre>
<pre><code>-- subquery_demo1.sql

-- Query to list top 20 packages with the greatest numbers of files

.mode column
.header on
.width 20 40 10 10
SELECT package_name, description,
       (SELECT COUNT(file)
          FROM Package_Files
         WHERE Package_Descriptions.package_name = Package_Files.package_name)
            AS files,
       (SELECT SUM(size_bytes)
          FROM Package_Files
         WHERE Package_Descriptions.package_name = Package_Files.package_name)
            AS size
  FROM Package_Descriptions ORDER BY files DESC LIMIT 20;</code></pre>
<pre><code>me@linuxbox:~/adventure-sql$ sqlite3 adv-sql.sqlite &lt; subquery_demo1.sql
package_name          description                       files       size      
--------------------  --------------------------------  ----------  ----------
linux-headers-4.15.0  Header files related to Linux ke  14849       63991787  
linux-headers-4.15.0  Header files related to Linux ke  14849       64001943  
humanity-icon-theme   Humanity Icon theme               8014        14213715  
linux-headers-4.15.0  Linux kernel headers for version  7861        9015084   
linux-headers-4.15.0  Linux kernel headers for version  7860        9025673   
linux-modules-extra-  Linux kernel extra modules for v  4173        165921470 
linux-modules-extra-  Linux kernel extra modules for v  4172        165884678 
libreoffice-common    office productivity suite -- arc  3551        76686149  
gnome-accessibility-  High Contrast GTK+ 2 theme and i  3464        3713621   
ubuntu-mono           Ubuntu Mono Icon theme            3025        3755093   
ncurses-term          additional terminal type definit  2727        1987483   
manpages-dev          Manual pages about using GNU/Lin  2101        2192620   
linux-firmware        Firmware for Linux kernel driver  1938        331497257 
tzdata                time zone and daylight-saving ti  1834        1210058   
vim-runtime           Vi IMproved - Runtime files       1642        27941732  
codium                Code editing. Redefined.          1307        271907088 
zsh-common            architecture independent files f  1256        12261077  
perl-modules-5.26     Core Perl modules                 1144        18015966  
adwaita-icon-theme    default icon theme of GNOME (sma  1127        4848678   
gimp-data             Data files for GIMP               1032        45011675</code></pre>
<pre><code>SELECT list_of_items FROM Package_Descriptions
ORDER BY total_files DESC
LIMIT 20;</code></pre>
<pre><code>-- subquery_demo2.sql

-- Query to list all packages containing more than 1000 files

.mode column
.header on
.width 20 60
SELECT package_name, description
  FROM Package_Descriptions
 WHERE 1000 &lt; (SELECT COUNT(file)
          FROM Package_Files
         WHERE Package_Descriptions.package_name = Package_Files.package_name)
 ORDER BY package_name;</code></pre>
<pre><code>me@linuxbox:~/adventure-sql$ sqlite3 adv-sql.sqlite &lt; subquery_demo2.sql
package_name          description                                                 
--------------------  --------------------------------------------------------
adwaita-icon-theme    default icon theme of GNOME (small subset)              
codium                Code editing. Redefined.                                
gimp-data             Data files for GIMP                                     
gnome-accessibility-  High Contrast GTK+ 2 theme and icons                    
humanity-icon-theme   Humanity Icon theme                                     
inkscape              vector-based drawing program                            
libreoffice-common    office productivity suite -- arch-independent files     
linux-firmware        Firmware for Linux kernel drivers                       
linux-headers-4.15.0  Header files related to Linux kernel version 4.15.0     
linux-headers-4.15.0  Linux kernel headers for version 4.15.0 on 64 bit x86 SM
linux-headers-4.15.0  Header files related to Linux kernel version 4.15.0     
linux-headers-4.15.0  Linux kernel headers for version 4.15.0 on 64 bit x86 SM
linux-modules-4.15.0  Linux kernel extra modules for version 4.15.0 on 64 bit 
linux-modules-4.15.0  Linux kernel extra modules for version 4.15.0 on 64 bit 
linux-modules-extra-  Linux kernel extra modules for version 4.15.0 on 64 bit 
linux-modules-extra-  Linux kernel extra modules for version 4.15.0 on 64 bit 
manpages-dev          Manual pages about using GNU/Linux for development      
ncurses-term          additional terminal type definitions                     
perl-modules-5.26     Core Perl modules                                        
tzdata                time zone and daylight-saving time data                  
ubuntu-mono           Ubuntu Mono Icon theme                                   
vim-runtime           Vi IMproved - Runtime files                              
zsh-common            architecture independent files for Zsh</code></pre>
<pre><code>sqlite&gt; .mode column
sqlite&gt; .header on
sqlite&gt; .width 50 -10
sqlite&gt; SELECT file, size_bytes FROM Package_Files
   ...&gt; WHERE package_name = &#39;sqlite3&#39;;
file                                                size_bytes
--------------------------------------------------  ----------
/usr/bin/sqldiff                                       1103280
/usr/bin/sqlite3                                       1260976
/usr/share/doc/sqlite3/copyright                          1261
/usr/share/man/man1/sqlite3.1.gz                          3596
/usr/share/doc/sqlite3/changelog.Debian.gz                  35</code></pre>
<pre><code>sqlite&gt; UPDATE Package_Files SET size_bytes = size_bytes + 100
   ...&gt; WHERE package_name = &#39;sqlite3&#39;;</code></pre>
<pre><code>sqlite&gt; SELECT file, size_bytes FROM Package_Files
   ...&gt; WHERE package_name = &#39;sqlite3&#39;;
file                                                size_bytes
--------------------------------------------------  ----------
/usr/bin/sqldiff                                       1103380
/usr/bin/sqlite3                                       1261076
/usr/share/doc/sqlite3/copyright                          1361
/usr/share/man/man1/sqlite3.1.gz                          3696
/usr/share/doc/sqlite3/changelog.Debian.gz                 135</code></pre>
<pre><code>sqlite&gt; UPDATE Package_Files SET size_bytes = size_bytes - 100
   ...&gt; WHERE package_name = &#39;sqlite3&#39;;</code></pre>
<pre><code>-- create_Package_Stats.sql

DROP TABLE IF EXISTS Package_Stats;
CREATE TABLE Package_Stats (
    package_name  VARCHAR(60),
    count         INTEGER,
    tot_size      INTEGER,
    min_size      INTEGER,
    max_size      INTEGER,
    avg_size      REAL
);

INSERT INTO Package_Stats (package_name)
     SELECT package_name
       FROM Package_Descriptions;

UPDATE Package_Stats
   SET count = (SELECT COUNT(file)
                  FROM Package_Files
                 WHERE Package_Files.package_name =
                       Package_Stats.package_name),
    tot_size = (SELECT SUM(size_bytes)
                  FROM Package_Files
                 WHERE Package_Files.package_name = 
                       Package_Stats.package_name),
    min_size = (SELECT MIN(size_bytes)
                  FROM Package_Files
                 WHERE Package_Files.package_name = 
                       Package_Stats.package_name),
    max_size = (SELECT MAX(size_bytes)
                  FROM Package_Files
                 WHERE Package_Files.package_name = 
                       Package_Stats.package_name),
    avg_size = (SELECT AVG(size_bytes)
                  FROM Package_Files
                 WHERE Package_Files.package_name = 
                       Package_Stats.package_name);</code></pre>
<pre><code>sqlite&gt; .width 25 -5 -10 -8 -8 -10
sqlite&gt; SELECT * FROM Package_Stats LIMIT 10;
package_name               count    tot_size  min_size  max_size    avg_size
-------------------------  -----  ----------  --------  --------  ----------
a2ps                         299     3455890       117    388096  11558.1605
accountsservice               19      261704        42    182552  13773.8947
acl                           11       91106        30     35512  8282.36363
acpi-support                  18       13896        67      4922       772.0
acpid                         19       86126       115     52064  4532.94736
adduser                       81      246658         7     37322  3045.16049
adium-theme-ubuntu           137      126759        25     12502  925.248175
adwaita-icon-theme          1127     4848678        30     87850  4302.28748
aisleriot                    316     1890864        47    281544  5983.74683
alsa-base                     42      195295        24     34160  4649.88095</code></pre>
<pre><code>sqlite&gt; .mode insert Package_Files</code></pre>
<p>If we use this <code>.mode</code> setting, we tell SQLite that we want <code>INSERT</code> statements directed at the specified table, in this case, <code>Package_Files</code>. Once we set this output mode, we can see the result.</p>
<pre><code>sqlite&gt; SELECT * FROM Package_Files WHERE package_name = &#39;sqlite3&#39;;
INSERT INTO Package_Files VALUES(&#39;sqlite3&#39;,&#39;/usr/bin/sqldiff&#39;,1103380);
INSERT INTO Package_Files VALUES(&#39;sqlite3&#39;,&#39;/usr/bin/sqlite3&#39;,1261076);
INSERT INTO Package_Files VALUES(&#39;sqlite3&#39;,&#39;/usr/share/doc/sqlite3/copyright&#39;,1
361);
INSERT INTO Package_Files VALUES(&#39;sqlite3&#39;,&#39;/usr/share/man/man1/sqlite3.1.gz&#39;,3
696);
INSERT INTO Package_Files VALUES(&#39;sqlite3&#39;,&#39;/usr/share/doc/sqlite3/changelog.De
bian.gz&#39;,135);</code></pre>
<pre><code>sqlite&gt; .output insert_sqlite3.sql
sqlite&gt; select * from Package_Files where package_name = &#39;sqlite3&#39;;</code></pre>
<pre><code>sqlite&gt; .output</code></pre>
<p>Now let’s delete the rows in the <code>Package_Files</code> table.</p>
<pre><code>sqlite&gt; DELETE FROM Package_Files WHERE package_name = &#39;sqlite3&#39;;</code></pre>
<pre><code>sqlite&gt; .header on
sqlite&gt; .mode column
sqlite&gt; .width 12 50 -10
sqlite&gt; SELECT * FROM Package_Files WHERE package_name = &#39;sqlite3&#39;;
sqlite&gt;</code></pre>
<pre><code>sqlite&gt; .read insert_sqlite3.sql</code></pre>
<p>Now when we run our query, we see that the rows have been restored.</p>
<pre><code>sqlite&gt; SELECT * FROM Package_Files WHERE package_name = &#39;sqlite3&#39;;
package_name  file                                                size_bytes
------------  --------------------------------------------------  ----------
sqlite3       /usr/bin/sqldiff                                       1103280
sqlite3       /usr/bin/sqlite3                                       1260976
sqlite3       /usr/share/doc/sqlite3/copyright                          1261
sqlite3       /usr/share/man/man1/sqlite3.1.gz                          3596
sqlite3       /usr/share/doc/sqlite3/changelog.Debian.gz                  35</code></pre>
<pre><code>-- add_column.sql

-- Add and populate columns to Package_Descriptions

ALTER TABLE Package_Descriptions ADD COLUMN files INTEGER;
ALTER TABLE Package_Descriptions ADD COLUMN size INTEGER;

UPDATE Package_Descriptions
   SET files = (SELECT COUNT(file)
                  FROM Package_Files
                 WHERE Package_Files.package_name =
                       Package_Descriptions.package_name),
        size = (SELECT SUM(size_bytes)
                  FROM Package_Files
                 WHERE Package_Files.package_name =
                       Package_Descriptions.package_name);</code></pre>
<pre><code>sqlite&gt; .read add_column.sql
sqlite&gt; .schema
CREATE TABLE Package_Descriptions (
    package_name VARCHAR(60),
    description  VARCHAR(120),
    files        INTEGER,
    size         INTEGER);

sqlite&gt; SELECT * FROM Package_Descriptions WHERE package_name = &#39;sqlite3&#39;;
package_name  description                          files       size      
------------  -----------------------------------  ----------  ----------
sqlite3       Command line interface for SQLite 3  5           2369648 </code></pre>
<pre><code>ALTER TABLE table_name DROP COLUMN column_name;</code></pre>
<p>Unfortunately, SQLite does not support this so we have to do it the hard way. This is accomplished in four steps:</p>
<ol type="1">
<li>Create a new temporary table with the desired schema.</li>
<li>Copy the columns we want to keep into the temporary table.</li>
<li>Drop the original table.</li>
<li>Rename the temporary table.</li>
</ol>
<p>Here is a file called <code>drop_column.sql</code> that does the job.</p>
<pre><code>-- drop_column.sql

-- Remove extra columns from Package_Descriptions

BEGIN TRANSACTION;

-- Create new table with temporary name

DROP TABLE IF EXISTS temp;
CREATE TABLE temp (
    package_name VARCHAR(60),
    description  VARCHAR(120));

-- Copy columns we want into new table

INSERT INTO temp
    (package_name, description)
    SELECT package_name, description
      FROM Package_Descriptions;

-- Get rid of old table and rename the new replacement table

DROP TABLE Package_Descriptions;

ALTER TABLE temp RENAME TO Package_Descriptions;

COMMIT;</code></pre>
<pre><code>-- join_demo.sql

-- Demonstrate join by selecting columns from 2 tables

.header on
.mode column
.width 20 35 -5 -10

SELECT Package_Descriptions.package_name AS Package,
       description AS Description,
       count AS Files,
       tot_size AS Size
  FROM Package_Descriptions
  INNER JOIN Package_Stats
          ON Package_Descriptions.package_name =
             Package_Stats.package_name
LIMIT 10;</code></pre>
<pre><code>Package               Description                          Files        Size
--------------------  -----------------------------------  -----  ----------
a2ps                  GNU a2ps - &#39;Anything to PostScript&#39;    299     3455890
accountsservice       query and manipulate user account i     19      261704
acl                   Access control list utilities           11       91106
acpi-support          scripts for handling many ACPI even     18       13896
acpid                 Advanced Configuration and Power In     19       86126
adduser               add and remove users and groups         81      246658
adium-theme-ubuntu    Adium message style for Ubuntu         137      126759
adwaita-icon-theme    default icon theme of GNOME (small    1127     4848678
aisleriot             GNOME solitaire card game collectio    316     1890864
alsa-base             ALSA driver configuration files         42      195295</code></pre>
<pre><code>-- view_demo.sql

DROP VIEW IF EXISTS Stats;
CREATE VIEW Stats
AS
    SELECT Package_Descriptions.package_name AS Package,
           description AS Description,
           count AS Files,
           tot_size AS Size
      FROM Package_Descriptions
      INNER JOIN Package_Stats
              ON Package_Descriptions.package_name =
                 Package_Stats.package_name
        ORDER BY Package;</code></pre>
<pre><code>sqlite&gt; .header on
sqlite&gt; .mode column
sqlite&gt; .width 20 35 -5 -10
sqlite&gt; SELECT * FROM Stats LIMIT 10;
Package               Description                          Files        Size      
--------------------  -----------------------------------  -----  ----------
a2ps                  GNU a2ps - &#39;Anything to PostScript&#39;    299     3455890   
accountsservice       query and manipulate user account i     19      261704    
acl                   Access control list utilities           11       91106     
acpi-support          scripts for handling many ACPI even     18       13896     
acpid                 Advanced Configuration and Power In     19       86126     
adduser               add and remove users and groups         81      246658    
adium-theme-ubuntu    Adium message style for Ubuntu         137      126759    
adwaita-icon-theme    default icon theme of GNOME (small    1127     4848678   
aisleriot             GNOME solitaire card game collectio    316     1890864   
alsa-base             ALSA driver configuration files         42      195295</code></pre>
<pre><code>sqlite&gt; DROP VIEW Stats;</code></pre>
<h3 id="indexes">Indexes</h3>
<p>It’s been said that the three most important features of a database system are “performance, performance, and performance.” While this in not exactly true (things like data integrity and reliability are important, too), complex operations on large databases can get really slow, so it’s important to make things as fast as we can. One feature we can take advantage of are <em>indexes</em>.</p>
<p>An index is a data structure the database maintains that speeds up database searches. It’s a sorted list of rows in a table ordered by elements in one or more columns. Without an index, a table is sorted according to values in a hidden column called <code>rowid</code>. The values in this column are integers that start with 1 and increment each time a row is added to the table. Here we see a query that selects the 100th row from the <code>Package_Stats</code> table.</p>
<pre><code>sqlite&gt; .header on
sqlite&gt; .mode column
sqlite&gt; .width 20 -5 -8 -8 -8 -8
sqlite&gt; SELECT * FROM Package_Stats WHERE rowid = 100;
package_name          count  tot_size  min_size  max_size  avg_size
--------------------  -----  --------  --------  --------  --------
cups-server-common      595   1996400         0    370070  3355.294</code></pre>
<pre><code>sqlite&gt; .width -8 -5 -4 55 
sqlite&gt; EXPLAIN QUERY PLAN
   ...&gt; SELECT * FROM Package_Stats WHERE package_name = &#39;cups-server-common&#39;;
selectid  order  from  detail
--------  -----  ----  ------------------------------------------------------- 
       0      0     0  SCAN TABLE Package_Stats</code></pre>
<pre><code>sqlite&gt; CREATE INDEX idx_package_name
   ...&gt; ON Package_Stats (package_name);</code></pre>
<pre><code>sqlite&gt; EXPLAIN QUERY PLAN
   ...&gt; SELECT * FROM Package_Stats WHERE package_name = &#39;cups-server-common&#39;;
   selectid  order  from  detail                                                 
   --------  -----  ----  -------------------------------------------------------
          0      0     0  SEARCH TABLE Package_Stats USING INDEX idx_package_name</code></pre>
<pre><code>sqlite&gt; .schema Package_Stats
CREATE TABLE Package_Stats (
    package_name  VARCHAR(60),
    count         INTEGER,
    tot_size      INTEGER,
    min_size      INTEGER,
    max_size      INTEGER,
    avg_size      REAL
);
CREATE INDEX idx_package_name
ON Package_Stats (package_name);</code></pre>
<pre><code>sqlite&gt; .indexes
idx_package_name</code></pre>
<pre><code>sqlite&gt; CREATE INDEX idx_tot_size
   ...&gt; ON Package_Stats (tot_size);
sqlite&gt; .width 20 -5 -10 -8 -8 -8
sqlite&gt; SELECT * FROM Package_Stats
   ...&gt; WHERE tot_size &gt; 100000000;
   package_name          count    tot_size  min_size  max_size avg_size
   --------------------  -----  ----------  --------  -------- --------
   inkscape               1025   127507308         0  19599216 124397.3
   libreoffice-core        119   135106135        26  66158968 1135345.
   linux-modules-extra-   4172   165884678      1292   4216105 39761.42
   linux-modules-extra-   4173   165921470      1292   4216105 39760.71
   thunderbird              69   180861838        27  12163098 2621186.
   firefox                  74   203393773        23  12408360 2748564.
   google-chrome-stable    100   235727530        25  16288078 2357275.
   libgl1-mesa-dri:amd6     20   237774005        36  19548840 11888700
   codium                 1307   271907088        17  11551467 208039.0
   linux-firmware         1938   331497257         6  19922416 171051.2</code></pre>
<pre><code>sqlite&gt; DROP INDEX idx_package_name;
sqlite&gt; DROP INDEX idx_tot_size;</code></pre>
<pre><code>CREATE PROCEDURE procudure_name
AS
    [block of SQL code];</code></pre>
<pre><code>CREATE PROCEDURE list_pkg_files @package VARCHAR(60)
AS
    SELECT package_name, file
      FROM Package_Files
     WHERE package_name = @package; </code></pre>
<pre><code>EXEC list_package_files @package = &#39;bash&#39;;</code></pre>
<p>Unfortunately, SQLite does not support stored procedures. It does, however, support the second method of code storage, triggers.</p>
<p>Triggers are stored blocks of code that are automatically called when some event occurs and a specified condition is met. Triggers are typically used to perform certain maintenance tasks to keep the database in good working order.</p>
<p>Triggers can be set to activate before, after, or instead of the execution of <code>INSERT</code>, <code>DELETE</code>, or <code>UPDATE</code> statements. In the example below, we will have a trigger activate before a <code>DELETE</code> is performed on the <code>Package_Files</code> table.</p>
<pre><code>/*
    trigger_demo.sql

    Trigger demo where we create a &quot;trash can&quot; for the
    Package_Files table and set a trigger to copy rows
    to the PF_Backup table just before they are deleted
    from Package_Files.
*/

-- Create backup table with the same schema as Package_Files

CREATE TABLE IF NOT EXISTS PF_Backup (
    package_name VARCHAR(60),
    file         VARCHAR(120),
    size_bytes   INTEGER
);

-- Define trigger to copy rows into PF_Backup as they are
-- deleted from Package_Files

CREATE TRIGGER backup_row_before_delete
BEFORE DELETE ON Package_Files
BEGIN
    INSERT INTO PF_Backup
    VALUES (OLD.package_name, OLD.file, OLD.size_bytes);
END;</code></pre>
<pre><code>sqlite&gt; .dump</code></pre>
<p>The stream will appear on standard output or we can use the <code>.output</code> dot command to direct the stream to the file of our choice.</p>
<p>One interesting application of this technique would be to combine tables from multiple databases into one. For example, let’s imagine we had several Raspberry Pi computers each performing data logging of an external sensor. We could collect dumps from each machine and combine all of the tables into a single database for data analysis and reporting.</p>
<h3 id="generating-your-own-datasets">Generating Your Own Datasets</h3>
<p>Below are the programs used to create the datasets used in this adventure. They are included in the archive for those who want to create their own datasets.</p>
<h4 id="for-deb-based-systems-debian-ubuntu-mint-raspberry-pi-os">For Deb-based Systems (Debian, Ubuntu, Mint, Raspberry Pi OS)</h4>
<p>The first program named <code>mk_package_descriptions-deb</code>, extracts package information and outputs a <code>.tsv</code> file.</p>
<pre><code>#!/bin/bash

# mk_package_descriptions-deb - Output tsv list of installed debian/ubnutu
#                               packages on standard output

phase1() { # Replace repeated spaces with a tab
  awk &#39;
  {
    gsub(/[ ][ ]+/, &quot;\t&quot;)
    print $0
  }&#39;
  return
}

phase2() { # Output field 2 and 5 separated by a tab
  awk &#39;
    BEGIN {
      FS = &quot;\t&quot;
    }

    $1 == &quot;ii&quot; {
      print $2 &quot;\t&quot; $5
    }&#39;
  return
}

dpkg-query -l | phase1 | phase2</code></pre>
<pre><code>#!/bin/bash

# mk_package_files - make list of files in all packages
# Reads *.list files in LIST_DIR. Outputs stream of tsv to stdout.

LIST_DIR=/var/lib/dpkg/info

mk_list () {

  local list_file=&quot;$1&quot;
  local lf_length=&quot;${#list_file}&quot;
  local len
  local package
  local -a files

  ((len = lf_length - 5))
  package=&quot;${list_file:0:$len}&quot; # strip &#39;.list&#39; extension
  package=&quot;${package##*/}&quot; # strip leading pathname
  mapfile files &lt; &quot;$list_file&quot; # load list into array
  for i in &quot;${files[@]}&quot;; do
    i=&quot;${i//[$&#39;\t\r\n&#39;]}&quot; # strip trailing newlines
    if [[ -f &quot;$i&quot; ]] ; then # write tsv file
      printf &quot;%s\t%s\t%s\n&quot; \
        &quot;$package&quot; \
        &quot;$i&quot; \
        &quot;$(stat --printf &#39;%s&#39; &quot;$i&quot;)&quot; # size of file
    fi
  done
  return
}

for i in &quot;$LIST_DIR&quot;/*.list; do
  mk_list &quot;$i&quot;
done</code></pre>
<pre><code>#!/bin/bash

# mk_package_descriptions-rpm - Output tsv list of installed Fedora/CentOS
#                               packages on standard output

while read package; do
  description=$(dnf info &quot;$package&quot; \
    | awk &#39;$1 == &quot;Summary&quot; { gsub(/Summary      : /, &quot;&quot;); print $0; exit }&#39;)
  printf &quot;%s\t%s\n&quot; \
    &quot;$package&quot; \
    &quot;$description&quot;
done &lt; &lt;( dnf list installed | awk &#39;NF == 3 { print $1 }&#39; )</code></pre>
<pre><code>#!/bin/bash

# mk_package_files-rpm - Output tsv list of installed Fedora/CentOS files
#                        on standard output

while read package; do
  while read package_file; do
    if [[ -r &quot;$package_file&quot; ]]; then # not all files are present/readable
      printf &quot;%s\t%s\t%s\n&quot; \
        &quot;$package&quot; \
        &quot;$package_file&quot; \
        &quot;$(stat --printf &#39;%s&#39; &quot;$package_file&quot;)&quot;
    fi
  done &lt; &lt;( rpm -ql &quot;$package&quot; )
done &lt; &lt;( dnf list installed | awk &#39;NF == 3 { print $1 }&#39; )</code></pre>
<pre><code>#!/usr/bin/awk -f

# insert_package_descriptions.awk - Insert records from
#                                   package_descriptions.tsv

BEGIN {
    FS=&quot;\t&quot;
    print &quot;DROP TABLE IF EXISTS Package_Descriptions;&quot;
    print &quot;CREATE TABLE Package_Descriptions (&quot;
    print &quot;    package_name VARCHAR(60),&quot;
    print &quot;    description  VARCHAR(120)&quot;
    print &quot;);&quot;
    print &quot;BEGIN TRANSACTION;&quot; # vastly improves performance
}

{
    gsub(/&#39;/, &quot;&#39;&#39;&quot;) # double up single quotes to escape them
    print &quot;INSERT INTO Package_Descriptions&quot;
    print &quot;     VALUES ( &#39;&quot; $1 &quot;&#39;, &#39;&quot; $2 &quot;&#39;);&quot;
}

END {
    print &quot;COMMIT;&quot;
}</code></pre>
<pre><code>#!/usr/bin/awk -f

# insert_package_files.awk - Insert records from
#                            package_files.tsv

BEGIN {
    FS=&quot;\t&quot;
    print &quot;DROP TABLE IF EXISTS Package_Files;&quot;
    print &quot;CREATE TABLE Package_Files (&quot;
    print &quot;    package_name VARCHAR(60),&quot;
    print &quot;    file         VARCHAR(120),&quot;
    print &quot;    size_bytes   INTEGER&quot;
    print &quot;);&quot;
    print &quot;BEGIN TRANSACTION;&quot; # vastly improves performance
}

{
    gsub(/&#39;/, &quot;&#39;&#39;&quot;) # double up single quotes to escape them
    print &quot;INSERT INTO Package_Files&quot;
    print &quot;     VALUES (&#39;&quot; $1 &quot;&#39;, &#39;&quot; $2 &quot;&#39;,&#39;&quot; $3 &quot;&#39;);&quot;
}

END {
    print &quot;COMMIT;&quot;
}</code>
